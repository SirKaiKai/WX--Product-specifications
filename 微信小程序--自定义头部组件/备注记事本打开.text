小程序自定义头部，可以利用.json中window属性中的"navigationStyle": "custom"，
如果是单页面，可以在当前页面的json中直接设置"navigationStyle": "custom"，
也可以直接在app.json中的window设置"navigationStyle": "custom"，
如果设置没有效果，查看下项目的调试基础库，修改即可

小程序的头部是由两部分组成，导航条（时间、电量所处的横条） + 文本内容（标题部分，高为50px），
因手机型号不同，导航条的高度也都不相同，其中差别最大的为有无刘海屏，所以为了做到自适应，一般采用wx.getSystemInfo方法中的res.statusBarHeight来获取导航条的高度，
小程序头部采用px来进行布局。

一、单页面设置自定义头部
  1.设置当前页面的json中"navigationStyle": "custom"

  2.wxml：
     <!--头部内容填充-->
     <view class="NavBar-false" style="height:calc({{barHeight}}px + 50px);"></view>
     <!-- 人造头部  -->
     <view class="NavBar" style="padding-top:{{barHeight}}px;height:{{barHeight}}px + 50px">
       <view class='left'>
         <text class='iconfont iconpinglun'>这里左侧我引入的是图标，根据自己实际情况而定</text>
       </view>
       <view class='title'>页面标题</view>
       <view class='right'></view>
     </view>

  3.wxss：（样式根据要求设置就行，这里仅作演示）

  .NavBar-false {position: relative;z-index: 5;background: white;}
  .NavBar {background: red;color: #000;font-size: 32rpx;text-align: center;font-family: PingFangSC-regular;position: fixed;width: 100%;top: 0;left: 0;z-index: 5;background: white;
    display: flex;justify-content: space-between;padding: 0 30rpx;ine-height: 50px;border: 1px solid red;box-sizing: border-box;}
  .NavBar .title {font-size: 16px;font-weight: bold;text-align: center;}
  .NavBar view {flex: 1;height: 50px;}
  .NavBar .left {text-align: left;}
  .NavBar .left text {font-size: 22px; }

  4.js
  data：{ barHeight:'', // 导航条高度}
  onLoad: function (options) {
      wx.getSystemInfo({
        success: (res) => {
          console.log("高度"+res.statusBarHeight);
          this.setData({
            barHeight: res.statusBarHeight
          })
        }
      })
    },

二、 设置自定义头部组件
   1.在app.js中获取导航条高度
     1)globalData: {navHeight: null,}
     2)onLaunch: function () {
           wx.getSystemInfo({
             success: res => {
               //导航高度
               this.globalData.navHeight = res.statusBarHeight;
             }, fail(err) {
               console.log(err);
             }
           })

         },
   2.设置组件，在components文件夹中创建一个组件
     1) 文章标题设置为动态标题，css同上
     <!--头部内容填充-->
          <view class="NavBar-false" style="height:calc({{barHeight}}px + 50px);"></view>
          <!-- 人造头部  -->
          <view class="NavBar" style="padding-top:{{barHeight}}px;height:{{barHeight}}px + 50px">
            <view class='left'>
              <text class='iconfont iconpinglun'>这里左侧我引入的是图标，根据自己实际情况而定</text>
            </view>
            <view class='title'>{{title}}</view>
            <view class='right'></view>
          </view>
      2）js：
      const App = getApp();
      Component({
        properties:{
          title:String,
          left_show:Boolean
        },
        data:{
          barHeight:'',   // 高度
          title:"自定义标题"
        },
        lifetimes: {
          attached: function () {
            this.setData({
              barHeight: App.globalData.navHeight
            })
          }
        },

      })
     3.引用组件
       1）json中引入：
       "navigationStyle": "custom",
           "usingComponents": {
           "payments": "/components/navbar/navbar"
           }
        2）wxml：
           <payments id="paments" title="{{title}}"></payments>
        3）js：
           data: {
               title:"本页面标题"
             },
            onReady: function () {
                this.payments = this.selectComponent("#paments")
              },
